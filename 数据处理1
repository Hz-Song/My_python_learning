path = 'D:\\Python\\1024\\example.txt'

import json

records = [json.loads(line) for line in open(path)] # 列表

time_zones = [rec['tz'] for rec in records if 'tz' in rec]
from collections import defaultdict

def get_counts2(sequence):
    counts = defaultdict(int)
    for x in sequence:
        counts[x]+=1
    return counts


def get_counts(sequence):
    counts = {}
    for x in sequence:
        if x in counts:
            counts[x]+=1
        else:
            counts[x]=1
    return counts
    


counts = get_counts(time_zones)
print(counts['America/New_York'])
counts1=get_counts2(time_zones)
print(counts1['America/Denver'])
print(len(time_zones))

def top_counts(count_dict,n=10):
    value_key_pairs=[(count,tz)for tz,count in count_dict.items()]
    value_key_pairs.sort()
    return value_key_pairs[-n:]
    
    

from collections import Counter

counts = Counter(time_zones)
counts.most_common(10)
from pandas import DataFrame,Series
import pandas as pd
import numpy as np

frame = DataFrame(records)
print(frame['tz'])
#frame

tz_counts = frame['tz'].value_counts()
tz_counts[:10]

clean_tz = frame['tz'].fillna('Missing')
print(clean_tz[1])

clean_tz[clean_tz==""]='Unknown'
tz_counts=clean_tz.value_counts()
tz_counts[:10]
 %matplotlib inline
p=tz_counts[:10].plot(kind='barh',rot=0)

results = Series([x.split()[0] for x in frame.a.dropna()])#将a标签中的字符串按 空格切分，生成列表取0位

results[:5]

cframe = frame[frame.a.notnull()]

operating_system = np.where(cframe['a'].str.contains('Windows'),'Windows','Not Windows')

operating_system[:5]

by_tz_os = cframe.groupby(['tz',operating_system])
agg_counts = by_tz_os.size().unstack().fillna(0)
agg_counts[:10]
print(agg_counts)
print(type(agg_counts))

indexer = agg_counts.sum(1).argsort()
count_subset = agg_counts.take(indexer)[-10:]
count_subset

count_subset.plot(kind='barh',stacked=True)
normed_subset = count_subset.div(count_subset.sum(1),axis=0)
normed_subset.plot(kind='barh',stacked = True)


